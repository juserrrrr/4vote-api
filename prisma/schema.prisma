generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Opcao {
  id           Int            @id @default(autoincrement())
  pergunta_id  Int
  texto        String         @db.VarChar(255)
  URLimagem   String?  @db.VarChar(255)
  Pergunta     Pergunta       @relation(fields: [pergunta_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Pergunta_Opcao")
  Opcao_Votada Opcao_Votada[]

  @@index([pergunta_id], map: "Pergunta_Opcao")
}

model Opcao_Votada {
  voto_id  Int
  opcao_id Int
  Opcao    Opcao @relation(fields: [opcao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Opcao_Opcoes_Votadas")
  Voto     Voto  @relation(fields: [voto_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Voto_Opcoes_Votadas")

  @@id([voto_id, opcao_id])
  @@index([opcao_id], map: "Opcao_Opcoes_Votadas")
}

model Participacao {
  id          Int      @id @default(autoincrement())
  pesquisa_id Int
  usuario_id  Int
  Pesquisa    Pesquisa @relation(fields: [pesquisa_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Participacao_Pesquisa")
  Usuario     Usuario  @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Usuario_Participacao")

  @@unique(name: "participation", fields: [usuario_id, pesquisa_id]) 
  @@index([pesquisa_id], map: "Participacao_Pesquisa")
  @@index([usuario_id], map: "Usuario_Participacao")
}

model Pergunta {
  id          Int      @id @default(autoincrement())
  texto       String   @db.VarChar(255)
  pesquisa_id Int
  Opcao       Opcao[]
  Pesquisa    Pesquisa @relation(fields: [pesquisa_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Pesquisa_Pergunta")

  @@index([pesquisa_id], map: "Pesquisa_Pergunta")
}

model Pesquisa {
  id           Int            @id @default(autoincrement())
  titulo       String         @db.VarChar(255)
  codigo       String         @unique(map: "Pesquisa_ak_codigo") @db.VarChar(11)
  dataCriacao  DateTime       @default(now()) @db.Timestamp(0)
  dataTermino  DateTime       @db.Timestamp(0)
  ehPublico    Boolean
  descricao    String?        @db.Text
  criador      Int
  arquivado    Boolean        @default(false)
  URLimagem    String?        @db.VarChar(255)
  ehVotacao    Boolean
  Participacao Participacao[]
  Pergunta     Pergunta[]
  Usuario      Usuario        @relation(fields: [criador], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Criar")
  Tag_Pesquisa Tag_Pesquisa[]

  @@index([criador], map: "Criar")
}

model Tag {
  id           Int            @id @default(autoincrement())
  nome         String         @unique(map: "Tag_ak_nome") @db.VarChar(255)
  Tag_Pesquisa Tag_Pesquisa[]
}

model Tag_Pesquisa {
  tag_id      Int
  pesquisa_id Int
  Pesquisa    Pesquisa @relation(fields: [pesquisa_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Pesquisa_Tags_Pesquisa")
  Tag         Tag      @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Tag_Tags_Pesquisa")

  @@id([tag_id, pesquisa_id])
  @@index([pesquisa_id], map: "Pesquisa_Tags_Pesquisa")
}

model Usuario {
  id           Int            @id @default(autoincrement())
  nome         String         @db.VarChar(255)
  email        String         @unique(map: "Usuario_ak_email") @db.VarChar(255)
  cpf          String         @unique(map: "Usuario_ak_cpf") @db.VarChar(14)
  senha        String         @db.VarChar(255)
  validado  Boolean @default(false)
  URLimagem    String?        @db.VarChar(255)
  Participacao Participacao[]
  Pesquisa     Pesquisa[]
  CodigoValidacao CodigoValidacao[]
}

model Voto {
  id           Int            @id @default(autoincrement())
  data         DateTime       @default(now()) @db.Timestamp(0)
  hash         String         @db.VarChar(255)
  Opcao_Votada Opcao_Votada[]
}

model CodigoValidacao {
  id        Int      @id @default(autoincrement())
  usuarioId Int
  codigo    String   @unique(map: "codigo_ak_usuario") @db.VarChar(255)
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])

  @@index([usuarioId])
}